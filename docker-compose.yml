version: '3.8'

services:
  # Base de donn√©es MongoDB
  mongodb:
    image: mongo:7.0
    container_name: devit-smm-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: devit-smm
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - devit-network

  # Cache Redis (optionnel)
  redis:
    image: redis:7.2-alpine
    container_name: devit-smm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devit-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: devit-smm-backend
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/devit-smm?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      CHARGILY_API_KEY: test_pk_your_api_key_here
      CHARGILY_SECRET_KEY: test_sk_your_secret_key_here
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - devit-network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: devit-smm-frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - devit-network

volumes:
  mongodb_data:
  redis_data:

networks:
  devit-network:
    driver: bridge
